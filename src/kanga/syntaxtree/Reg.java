//
// Generated by JTB 1.3.2
//

package kanga.syntaxtree;

import kanga.visitor.GJNoArguVisitor;
import kanga.visitor.GJVisitor;
import kanga.visitor.GJVoidVisitor;
import kanga.visitor.Visitor;

/**
 * Grammar production:
 * f0 -> "a0"
 * | "a1"
 * | "a2"
 * | "a3"
 * | "t0"
 * | "t1"
 * | "t2"
 * | "t3"
 * | "t4"
 * | "t5"
 * | "t6"
 * | "t7"
 * | "s0"
 * | "s1"
 * | "s2"
 * | "s3"
 * | "s4"
 * | "s5"
 * | "s6"
 * | "s7"
 * | "t8"
 * | "t9"
 * | "v0"
 * | "v1"
 */
public class Reg implements Node {
    private static final long serialVersionUID = 6145889287605732665L;
    public NodeChoice f0;

    public Reg(NodeChoice n0) {
        f0 = n0;
    }

    @Override
    public void accept(Visitor v) {
        v.visit(this);
    }

    @Override
    public <R, A> R accept(GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    @Override
    public <R> R accept(GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    @Override
    public <A> void accept(GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}

