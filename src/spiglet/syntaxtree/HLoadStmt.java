//
// Generated by JTB 1.3.2
//

package spiglet.syntaxtree;

import spiglet.visitor.GJNoArguVisitor;
import spiglet.visitor.GJVisitor;
import spiglet.visitor.GJVoidVisitor;
import spiglet.visitor.Visitor;

/**
 * Grammar production:
 * f0 -> "HLOAD"
 * f1 -> Temp()
 * f2 -> Temp()
 * f3 -> IntegerLiteral()
 */
public class HLoadStmt implements Node {
    private static final long serialVersionUID = 5626744659923419888L;
    public NodeToken f0;
    public Temp f1;
    public Temp f2;
    public IntegerLiteral f3;

    public HLoadStmt(NodeToken n0, Temp n1, Temp n2, IntegerLiteral n3) {
        f0 = n0;
        f1 = n1;
        f2 = n2;
        f3 = n3;
    }

    public HLoadStmt(Temp n0, Temp n1, IntegerLiteral n2) {
        f0 = new NodeToken("HLOAD");
        f1 = n0;
        f2 = n1;
        f3 = n2;
    }

    @Override
    public void accept(Visitor v) {
        v.visit(this);
    }

    @Override
    public <R, A> R accept(GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    @Override
    public <R> R accept(GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    @Override
    public <A> void accept(GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}

